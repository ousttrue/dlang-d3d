// This source code was generated by regenerator
module windowskits.d2d1_2;
import windowskits.d2d1_1;
import core.sys.windows.windef;
import core.sys.windows.basetsd;
import windowskits.d2d1;
import windowskits.minwindef;
import core.sys.windows.winnt;
import windowskits.dxgi;
import windowskits.wincodec;
import windowskits.dcommon;
import windowskits.dwrite;
import windowskits.objidlbase;
import windowskits.guiddef;
import core.sys.windows.basetyps;
import windowskits.d2d1effectauthor;
import core.sys.windows.unknwn;
import windowskits.guidutil;
import windowskits.winnt;
interface ID2D1Device1: ID2D1Device
{
    static const iidof = parseGUID("d21768e1-23a4-4823-a14b-7c3eba85d658");
    D2D1_RENDERING_PRIORITY GetRenderingPriority();
    void SetRenderingPriority(D2D1_RENDERING_PRIORITY renderingPriority);
    HRESULT CreateDeviceContext(D2D1_DEVICE_CONTEXT_OPTIONS options, ID2D1DeviceContext1* deviceContext1);
}
enum D2D1_RENDERING_PRIORITY
{
    _NORMAL = 0x0,
    _LOW = 0x1,
    _FORCE_DWORD = 0xffffffff,
}
interface ID2D1DeviceContext1: ID2D1DeviceContext
{
    static const iidof = parseGUID("d37f57e4-6908-459f-a199-e72f24f79987");
    HRESULT CreateFilledGeometryRealization(ID2D1Geometry geometry, FLOAT flatteningTolerance, ID2D1GeometryRealization* geometryRealization);
    HRESULT CreateStrokedGeometryRealization(ID2D1Geometry geometry, FLOAT flatteningTolerance, FLOAT strokeWidth, ID2D1StrokeStyle strokeStyle, ID2D1GeometryRealization* geometryRealization);
    void DrawGeometryRealization(ID2D1GeometryRealization geometryRealization, ID2D1Brush brush);
}
interface ID2D1GeometryRealization: ID2D1Resource
{
    static const iidof = parseGUID("a16907d7-bc02-4801-99e8-8cf7f485f774");
}
interface ID2D1Factory2: ID2D1Factory1
{
    static const iidof = parseGUID("94f81a73-9212-4376-9c58-b16a3a0d3992");
    HRESULT CreateDevice(IDXGIDevice dxgiDevice, ID2D1Device1* d2dDevice1);
}
interface ID2D1CommandSink1: ID2D1CommandSink
{
    static const iidof = parseGUID("9eb767fd-4269-4467-b8c2-eb30cb305743");
    HRESULT SetPrimitiveBlend1(D2D1_PRIMITIVE_BLEND primitiveBlend);
}
extern(C) FLOAT D2D1ComputeMaximumScaleFactor(const(D2D1_MATRIX_3X2_F)* matrix);
